
#Magento Customer GraphQl Schema

type Mutation {
    newsletter (email: String!, subscription: Int!): NewsletterOutput @resolver(class: "\\Ced\\PwaApi\\Model\\Resolver\\Newsletter") @doc(description:"Newsletter subscription")
}

type NewsletterOutput {
	 success: String!
     message: String!
}

type Query {

    homeSlider: HomeSlider @resolver(class: "Ced\\PwaApi\\Model\\Resolver\\HomeSlider") @doc(description: "Get Home Slider Images Collection")

    homepageConfig: HomepageConfig @resolver(class: "Ced\\PwaApi\\Model\\Resolver\\HomepageConfig") @doc(description: "Get Homepage configuration")

    latestProducts: LatestProducts @resolver(class: "Ced\\PwaApi\\Model\\Resolver\\LatestProducts") @doc(description: "Get Latest products")

    bestSeller: BestSeller @resolver(class: "Ced\\PwaApi\\Model\\Resolver\\BestSeller") @doc(description: "Get Best products")

    customerOrders: CustomerOrders @resolver(class: "Ced\\PwaApi\\Model\\Resolver\\Orders") @doc(description: "List of customer orders") @cache(cacheable: false)

	}
type CustomerOrder @doc(description: "Order mapping fields") {
    id: Int
    increment_id: String
    created_at: String
    grand_total: Float
    status: String
    currency :String
    ship_to: String
}

type HomeSlider @doc(description: "This will define home slider details") {
    allSlides: [SlideItems] @doc(description: "This will define home slider details")
}

type SlideItems @doc(description: "This will define home slider details") {

id: Int
url: String @doc(description: "slider url")
image: String @doc(description: "slider image url")

}
 
type HomepageConfig @doc(description: "This will define home slider details") {
    configData: [HomepageConfigData] @doc(description: "This will define home slider details")
}

type HomepageConfigData @doc(description: "This will define home page config") {
    name: String @doc(description: "Name of homepage config")
    value: String @doc(description: "value of homepage config")
}

type LatestProducts @doc(description: "Get Latest products") {
    data: [LatestProductsData] @doc(description: "Get Latest products")
}

type LatestProductsData @doc(description: "Get Latest products") {
    name: String @doc(description: "Get Latest products")
    price: String @doc(description: "Get Latest products")
    final_price: String @doc(description: "Get Latest products")
    sku: String @doc(description: "Get Latest products")
    image: String @doc(description: "Get Latest products")
    description: String @doc(description: "Get Latest products")
    urlkey: String @doc(description: "Get Latest products")
}

type BestSeller @doc(description: "Get Best products") {
    data: [BestSellerData] @doc(description: "Get Best products")
}

type BestSellerData @doc(description: "Get Best products") {
    name: String @doc(description: "Get Best products")
    price: String @doc(description: "Get Best products")
    final_price: String @doc(description: "Get Best products")
    sku: String @doc(description: "Get Best products")
    image: String @doc(description: "Get Best products")
    description: String @doc(description: "Get Best products")
    urlkey: String @doc(description: "Get Best products")
}


